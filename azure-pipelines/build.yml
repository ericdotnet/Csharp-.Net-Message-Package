parameters:
- name: windowsPool
  type: object
  default:
    vmImage: windows-2022
- name: includeMacOS
- name: RunTests
  type: boolean
  default: true

jobs:
- job: Windows
  pool: ${{ parameters.windowsPool }}
  steps:
  - checkout: self
    fetchDepth: 0 # avoid shallow clone so nbgv can do its work.
    clean: true
  - template: install-dependencies.yml

  - powershell: '& (./azure-pipelines/Get-nbgv.ps1) cloud -c'
    displayName: ‚öô Set build number

  - template: dotnet.yml
    parameters:
      RunTests: ${{ parameters.RunTests }}

- job: Linux
  pool:
    vmImage: Ubuntu 20.04
  steps:
  - checkout: self
    fetchDepth: 0 # avoid shallow clone so nbgv can do its work.
    clean: true
  - template: install-dependencies.yml
  - template: dotnet.yml
    parameters:
      RunTests: ${{ parameters.RunTests }}

- job: macOS
  condition: ${{ parameters.includeMacOS }}
  pool:
    vmImage: macOS-12
  steps:
  - checkout: self
    fetchDepth: 0 # avoid shallow clone so nbgv can do its work.
    clean: true
  - template: install-dependencies.yml
  - template: dotnet.yml
    parameters:
      RunTests: ${{ parameters.RunTests }}

# This job ensures that we're running mpc regularly on the generated code that we check in.
# It also helps exercise mpc so bugs don't go unnoticed.
- job: codegen_diff
  pool:
    vmImage: ubuntu-22.04
  steps:
  - checkout: self
    clean: true
  - template: install-dependencies.yml
  - pwsh: sandbox/codegen.ps1
    displayName: üè≠ Regenerate checked-in code
  - bash: |
        git add -u . # compare after applying git EOL normalization
        git diff --cached --exit-code --stat \
        || (echo "##[error] found changed files after build. Please run 'sandbox/codegen.ps1'" \
                "and check in all changes" \
            && git diff --cached \
            && exit 1)
    displayName: üîç Check for uncommitted changes

- job: WrapUp
  dependsOn:
  - Windows
  - Linux
  - macOS
  pool: ${{ parameters.windowsPool }} # Use Windows agent because PublishSymbols task requires it (https://github.com/microsoft/azure-pipelines-tasks/issues/13821).
  condition: succeededOrFailed()
  steps:
  - checkout: self
    fetchDepth: 0 # avoid shallow clone so nbgv can do its work.
    clean: true
  - template: install-dependencies.yml
    parameters:
      initArgs: -NoRestore
  - template: publish-symbols.yml
    parameters:
      includeMacOS: ${{ parameters.includeMacOS }}
  - ${{ if parameters.RunTests }}:
    - template: publish-codecoverage.yml
      parameters:
        includeMacOS: ${{ parameters.includeMacOS }}
  - template: publish-deployables.yml
